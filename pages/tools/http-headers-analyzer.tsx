import { FunctionComponent, useState } from 'react';
import TextEditor from '../../components/editors/text-editor';
import Hero from '../../components/hero';
import Meta from '../../components/meta';
import ToolsCta from '../../components/tools-cta';
import Layout from '../../layout/layout';

const headersInfo = {
  Accept: {
    desc: 'Advertises which content types the client is able to understand.',
    example:
      'text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8'
  },
  'Accept-CH': {
    desc: 'Advertises which client hint headers the user agent would like to receive from the server.',
    example: 'Device-Memory, Width'
  },
  'Accept-CH-Lifetime': {
    desc: 'Indicates the time window (in seconds) for which the user agent should use client hints.',
    example: '86400'
  },
  'Accept-Charset': {
    desc: 'Advertises which character encodings the client can accept.',
    example: 'utf-8'
  },
  'Accept-Encoding': {
    desc: 'Advertises which content encoding the client is able to understand.',
    example: 'gzip, deflate'
  },
  'Accept-Language': {
    desc: 'Advertises which languages the client is able to understand, and which locale variant is preferred.',
    example: 'en-US, en;q=0.5'
  },
  'Accept-Patch': {
    desc: 'Indicates which media types are acceptable for the PATCH method.',
    example: 'text/example;charset=utf-8'
  },
  'Accept-Post': {
    desc: 'Specifies the media types that the server is willing to handle with the POST method.',
    example: 'text/plain'
  },
  'Accept-Ranges': {
    desc: 'Indicates whether the server supports range requests, and if so in which unit the range can be expressed.',
    example: 'bytes'
  },
  'Access-Control-Allow-Credentials': {
    desc: "Tells browsers whether to expose the response to frontend JavaScript code when the request's credentials mode is 'include'.",
    example: 'true'
  },
  'Access-Control-Allow-Headers': {
    desc: 'Used in response to a preflight request to indicate which HTTP headers can be used during the actual request.',
    example: 'X-Custom-Header'
  },
  'Access-Control-Allow-Methods': {
    desc: 'Specifies the method or methods allowed when accessing the resource in response to a preflight request.',
    example: 'GET, POST, OPTIONS'
  },
  'Access-Control-Allow-Origin': {
    desc: 'Indicates whether the response can be shared with requesting code from the given origin.',
    example: '*'
  },
  'Access-Control-Expose-Headers': {
    desc: 'Indicates which headers can be exposed as part of the response by listing their names.',
    example: 'Content-Length'
  },
  'Access-Control-Max-Age': {
    desc: 'Indicates how long the results of a preflight request can be cached.',
    example: '600'
  },
  'Access-Control-Request-Headers': {
    desc: 'Used by browsers when issuing a preflight request, to let the server know which HTTP headers will be used when the actual request is made.',
    example: 'X-Custom-Header'
  },
  'Access-Control-Request-Method': {
    desc: 'Used by browsers when issuing a preflight request, to let the server know which HTTP method will be used when the actual request is made.',
    example: 'GET'
  },
  Age: {
    desc: 'Specifies the time elapsed since the response was generated by the origin server.',
    example: '3600'
  },
  Allow: {
    desc: 'Indicates the methods allowed when accessing the resource.',
    example: 'GET, HEAD'
  },
  'Alt-Svc': {
    desc: 'Provides alternative services to the client.',
    example: 'h2=":443"; ma=2592000'
  },
  'Alt-Used': {
    desc: 'Indicates that an alternative service was used.',
    example: 'clear'
  },
  Authorization: {
    desc: 'Contains the credentials to authenticate the client with the server.',
    example: 'Bearer <token>'
  },
  'Cache-Control': {
    desc: 'Specifies directives for caching mechanisms in both requests and responses.',
    example: 'max-age=3600'
  },
  'Clear-Site-Data': {
    desc: "Indicates which data should be cleared from the browser's cache and storage.",
    example: '"cache", "cookies", "storage"'
  },
  Connection: {
    desc: 'Controls whether the network connection stays open after the current transaction finishes.',
    example: 'keep-alive'
  },
  'Content-Digest': {
    desc: 'A Base64-encoded cryptographic hash of the resource for verifying integrity.',
    example: 'SHA-256=xzwyOQh2KvD6DLXa5k5S3Gjf1ed7c4N8/er4OTlXPV0='
  },
  'Content-Disposition': {
    desc: 'Specifies presentation and file download options for the response.',
    example: 'attachment; filename="example.txt"'
  },
  'Content-DPR': {
    desc: 'Specifies the device pixel ratio of the resource.',
    example: '2'
  },
  'Content-Encoding': {
    desc: 'Specifies the encoding algorithms applied to the resource.',
    example: 'gzip'
  },
  'Content-Language': {
    desc: 'Describes the natural language(s) of the intended audience for the enclosed content.',
    example: 'en'
  },
  'Content-Length': {
    desc: 'The length of the response body in octets (8-bit bytes).',
    example: '348'
  },
  'Content-Location': {
    desc: 'An alternate location for the returned data.',
    example: 'https://example.com/resource'
  },
  'Content-Range': {
    desc: 'Indicates where in a full body message a partial message belongs.',
    example: 'bytes 21010-47021/47022'
  },
  'Content-Security-Policy': {
    desc: 'Controls the resources which a user agent is allowed to load for a given page.',
    example: "default-src 'self'"
  },
  'Content-Security-Policy-Report-Only': {
    desc: 'Allows web developers to experiment with policies by monitoring (but not enforcing) their effects.',
    example: "default-src 'self'; report-uri /endpoint"
  },
  'Content-Type': {
    desc: 'Indicates the media type of the resource.',
    example: 'text/html; charset=utf-8'
  },
  Cookie: {
    desc: 'Contains stored HTTP cookies previously sent by the server with the Set-Cookie header.',
    example: 'sessionId=abc123'
  },
  'Critical-CH': {
    desc: "Indicates which client hints the user agent should prioritize and fetch early in the document's lifecycle.",
    example: 'DPR'
  },
  'Cross-Origin-Embedder-Policy': {
    desc: 'Allows a web page to control whether it can be embedded by other sites.',
    example: 'require-corp'
  },
  'Cross-Origin-Opener-Policy': {
    desc: 'Controls which pages can embed the resource using features that trigger a top-level navigation.',
    example: 'same-origin'
  },
  'Cross-Origin-Resource-Policy': {
    desc: 'Allows a server to specify who can use its resources.',
    example: 'same-site'
  },
  Date: {
    desc: 'The date and time at which the message was originated.',
    example: 'Fri, 14 Apr 2024 08:00:00 GMT'
  },
  'Device-Memory': {
    desc: 'Reports the approximate amount of RAM client device has.',
    example: '4'
  },
  Digest: {
    desc: 'Used in the Age response header to carry a hash of the response.',
    example: 'SHA-256=xzwyOQh2KvD6DLXa5k5S3Gjf1ed7c4N8/er4OTlXPV0='
  },
  DNT: {
    desc: "Expresses the user's tracking preference.",
    example: '1'
  },
  Downlink: {
    desc: 'Provides the bandwidth estimate in bits per second determined by the browser.',
    example: '10'
  },
  DPR: {
    desc: 'Specifies the device pixel ratio of the resource.',
    example: '2'
  },
  'Early-Data': {
    desc: 'Allows a client to include request headers when it initiates a connection, for use in negotiating early data.',
    example: '1'
  },
  ECT: {
    desc: 'Indicates the effective connection type (ECT) for the request.',
    example: '4g'
  },
  ETag: {
    desc: 'A unique identifier for a specific version of a resource.',
    example: '"abc123"'
  },
  Expect: {
    desc: 'Indicates that particular server behaviors are required by the client.',
    example: '100-continue'
  },
  'Expect-CT': {
    desc: 'Requests that the server host provide a Certificate Transparency (CT) policy.',
    example: 'max-age=3600, enforce'
  },
  Expires: {
    desc: 'Gives the date/time after which the response is considered stale.',
    example: 'Thu, 01 Dec 1994 16:00:00 GMT'
  },
  Forwarded: {
    desc: 'Contains information from the client-facing side of proxy servers that is altered or lost when a proxy is involved in the path of the request.',
    example: 'for=192.0.2.60;proto=http;by=203.0.113.43'
  },
  From: {
    desc: 'Contains an Internet email address for a human user who controls the requesting user agent.',
    example: 'user@example.com'
  },
  Host: {
    desc: 'Specifies the domain name of the server and the TCP port number on which the server is listening.',
    example: 'example.com'
  },
  'If-Match': {
    desc: 'Makes the request conditional, and applies the method only if the provided entity tags match.',
    example: '"abc123"'
  },
  'If-Modified-Since': {
    desc: 'Allows a 304 Not Modified to be returned if content is unchanged since the specified date.',
    example: 'Thu, 01 Dec 1994 16:00:00 GMT'
  },
  'If-None-Match': {
    desc: 'Makes the request conditional, and applies the method only if the provided entity tags do not match.',
    example: '"abc123"'
  },
  'If-Range': {
    desc: 'Makes a range request conditional: if the entity tag or date matches, send only part of the response.',
    example: '"abc123"'
  },
  'If-Unmodified-Since': {
    desc: 'Makes the request conditional: the method will only be processed if the provided date is stale.',
    example: 'Thu, 01 Dec 1994 16:00:00 GMT'
  },
  'Keep-Alive': {
    desc: 'Specifies a parameter to set the duration of a persistent connection.',
    example: 'timeout=5, max=1000'
  },
  'Large-Allocation': {
    desc: 'Indicates that the user agent prefers a lower latency, higher priority allocation made using an explicit opt-in.',
    example: '1'
  },
  'Last-Modified': {
    desc: 'Indicates the last modification date of the resource.',
    example: 'Thu, 01 Dec 1994 16:00:00 GMT'
  },
  Link: {
    desc: 'Used to represent relationships between the resource and some other resources.',
    example: '<https://example.com/resource.css>; rel="stylesheet"'
  },
  Location: {
    desc: 'Indicates the URL to redirect a page to.',
    example: 'https://example.com/new-location'
  },
  'Max-Forwards': {
    desc: 'Indicates how many times this request has been forwarded by intermediaries.',
    example: '10'
  },
  NEL: {
    desc: 'Used by servers to send reports back to a given endpoint.',
    example:
      '{"report_to": "network-errors", "max_age": 604800, "success_fraction": 0.001}'
  },
  'No-Vary-Search': {
    desc: 'Indicates that a cache should not try to match the request to a cached result and instead should always forward the request to the origin server.',
    example: '1'
  },
  'Observe-Browsing-Topics': {
    desc: 'Indicates the topics that a user-agent or server is observing.',
    example: 'news'
  },
  Origin: {
    desc: 'Indicates where a fetch originates from.',
    example: 'https://example.com'
  },
  'Origin-Agent-Cluster': {
    desc: 'Allows the owner of a resource to control which agents are allowed to activate a service worker.',
    example: '"example"'
  },
  'Permissions-Policy': {
    desc: 'Allows a website to control which features and APIs can be used in the browser.',
    example: 'geolocation=(self "https://example.com")'
  },
  Pragma: {
    desc: 'Implementation-specific header that may have various effects anywhere along the request-response chain.',
    example: 'no-cache'
  },
  'Proxy-Authenticate': {
    desc: 'Challenges the client to authenticate itself to the proxy server.',
    example: 'Basic'
  },
  'Proxy-Authorization': {
    desc: 'Contains the credentials to authenticate the client to a proxy server.',
    example: 'Basic <credentials>'
  },
  Range: {
    desc: 'Requests only part of a resource from the server.',
    example: 'bytes=0-1023'
  },
  Referer: {
    desc: 'Specifies the address of the previous web page from which a link to the currently requested page was followed.',
    example: 'https://example.com/previous-page'
  },
  'Referrer-Policy': {
    desc: 'Specifies the referrer policy that the user agent applies when determining what referrer information should be included with requests made.',
    example: 'no-referrer-when-downgrade'
  },
  'Reporting-Endpoints': {
    desc: 'Indicates the reporting endpoints where the user agent sends reports about security policies.',
    example: 'https://example.com/reports'
  },
  'Repr-Digest': {
    desc: 'Represents the digest of the payload in an HTTP request.',
    example: 'SHA-256=xzwyOQh2KvD6DLXa5k5S3Gjf1ed7c4N8/er4OTlXPV0='
  },
  'Retry-After': {
    desc: 'Indicates how long the user agent should wait before making a follow-up request.',
    example: '3600'
  },
  RTT: {
    desc: 'Indicates the round-trip time (RTT) estimate for the client device.',
    example: '50'
  },
  'Save-Data': {
    desc: "Indicates the user's preference for reduced data usage.",
    example: 'on'
  },
  'Sec-Browsing-Topics': {
    desc: 'Indicates the browsing topics that the user agent is interested in.',
    example: 'shopping'
  },
  'Sec-CH-Prefers-Color-Scheme': {
    desc: "Indicates the user's preference for color scheme.",
    example: 'dark'
  },
  'Sec-CH-Prefers-Reduced-Motion': {
    desc: "Indicates the user's preference for reduced motion.",
    example: '1'
  },
  'Sec-CH-Prefers-Reduced-Transparency': {
    desc: "Indicates the user's preference for reduced transparency.",
    example: '1'
  },
  'Sec-CH-UA': {
    desc: 'Indicates the user agent string of the client.',
    example:
      '"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.1234.56 Safari/537.36"'
  },
  'Sec-CH-UA-Arch': {
    desc: 'Indicates the CPU architecture of the client device.',
    example: 'arm'
  },
  'Sec-CH-UA-Bitness': {
    desc: "Indicates whether the client device's operating system is 32-bit or 64-bit.",
    example: '64'
  },
  'Sec-CH-UA-Full-Version': {
    desc: 'Indicates the full version of the user agent.',
    example: '123.0.1234.56'
  },
  'Sec-CH-UA-Full-Version-List': {
    desc: 'Indicates the list of full versions of the user agent.',
    example: '"123.0.1234.56", "122.0.1234.56"'
  },
  'Sec-CH-UA-Mobile': {
    desc: 'Indicates whether the client device is a mobile device.',
    example: '1'
  },
  'Sec-CH-UA-Model': {
    desc: 'Indicates the model of the client device.',
    example: 'Pixel 4'
  },
  'Sec-CH-UA-Platform': {
    desc: 'Indicates the platform (operating system) of the client device.',
    example: 'Windows'
  },
  'Sec-CH-UA-Platform-Version': {
    desc: 'Indicates the version of the platform (operating system) of the client device.',
    example: '10.0'
  },
  'Sec-Fetch-Dest': {
    desc: 'Indicates the destination for the fetch request.',
    example: 'image'
  },
  'Sec-Fetch-Mode': {
    desc: 'Indicates the mode for the fetch request (cors, navigate, nested-navigate, etc.).',
    example: 'navigate'
  },
  'Sec-Fetch-Site': {
    desc: 'Indicates the origin of the resource being fetched.',
    example: 'same-origin'
  },
  'Sec-Fetch-User': {
    desc: 'Indicates whether the request is initiated by a user gesture.',
    example: '?1'
  },
  'Sec-GPC': {
    desc: "Indicates the request's Global Privacy Control (GPC) status.",
    example: '1'
  },
  'Sec-Purpose': {
    desc: 'Specifies the reason why the server sent the header.',
    example: 'prefetch'
  },
  'Sec-WebSocket-Accept': {
    desc: 'Indicates the accept value of the Sec-WebSocket-Key header from the client.',
    example: 's3pPLMBiTxaQ9kYGzzhZRbK+xOo='
  },
  Server: {
    desc: 'Contains information about the software used by the origin server to handle the request.',
    example: 'Apache/2.4.41 (Unix)'
  },
  'Server-Timing': {
    desc: 'Provides server timing information with the resource.',
    example: 'app=3.1; "db", 4.2; "api"'
  },
  'Service-Worker-Navigation-Preload': {
    desc: 'Controls whether a service worker can preload navigation requests.',
    example: 'on'
  },
  'Set-Cookie': {
    desc: 'Instructs a web browser to store cookies for a specific domain.',
    example: 'sessionId=abc123; Expires=Wed, 09 Jun 2021 10:18:14 GMT'
  },
  'Set-Login': {
    desc: 'Indicates the login details used for authentication.',
    example: 'username=example'
  },
  SourceMap: {
    desc: 'Specifies the URL of the source map associated with the resource.',
    example: 'https://example.com/script.js.map'
  },
  'Speculation-Rules': {
    desc: 'Specifies speculation rules for a given resource.',
    example: 'expect-ct'
  },
  'Strict-Transport-Security': {
    desc: 'Specifies to the browser that it should only connect to the site over HTTPS.',
    example: 'max-age=31536000; includeSubDomains'
  },
  'Supports-Loading-Mode': {
    desc: 'Indicates whether a user agent supports a particular loading mode.',
    example: 'navigate'
  },
  TE: {
    desc: 'Specifies the transfer-coding values acceptable in the response.',
    example: 'trailers, deflate;q=0.5'
  },
  'Timing-Allow-Origin': {
    desc: 'Indicates whether timing information for the resource may be shared with third parties.',
    example: '*'
  },
  Tk: {
    desc: 'Indicates tracking status.',
    example: 'N'
  },
  Trailer: {
    desc: 'Specifies which HTTP headers can be sent in a trailer after the chunked body.',
    example: 'Max-Forwards'
  },
  'Transfer-Encoding': {
    desc: 'Specifies the form of encoding used to safely transfer the entity to the user.',
    example: 'chunked'
  },
  Upgrade: {
    desc: 'Indicates the preferred protocol when communicating with the server.',
    example: 'HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11'
  },
  'Upgrade-Insecure-Requests': {
    desc: 'Indicates whether the user agent should upgrade insecure requests to HTTPS.',
    example: '1'
  },
  'User-Agent': {
    desc: 'Contains a characteristic string that allows the network protocol peers to identify the application type, operating system, software vendor, or software version of the requesting software user agent.',
    example:
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.1234.56 Safari/537.36'
  },
  Vary: {
    desc: 'Specifies the request-header fields that, when changed, will trigger the server to include the corresponding response-header fields in its response.',
    example: 'Accept-Encoding'
  },
  Via: {
    desc: 'Informs the server of proxies through which the request was sent.',
    example: '1.0 fred, 1.1 example.com (Apache/1.1)'
  },
  'Viewport-Width': {
    desc: 'Indicates the layout viewport width in CSS pixels of the requesting device.',
    example: '1920'
  },
  'Want-Content-Digest': {
    desc: 'Indicates that the client wants the server to compute a content digest.',
    example: '1'
  },
  'Want-Digest': {
    desc: 'Indicates that the client wants to receive a digest of the payload in the response.',
    example: 'SHA-256'
  },
  'Want-Repr-Digest': {
    desc: 'Indicates that the client wants the server to compute a representation digest.',
    example: '1'
  },
  Warning: {
    desc: 'Provides additional information about potential problems with the response.',
    example: '110 and "Response is stale"'
  },
  Width: {
    desc: 'Specifies the layout viewport width in CSS pixels of the requesting device.',
    example: '1920'
  },
  'WWW-Authenticate': {
    desc: 'Indicates the authentication method that should be used to access a resource.',
    example: 'Basic'
  },
  'X-Content-Type-Options': {
    desc: 'Specifies MIME types that are allowed to be served.',
    example: 'nosniff'
  },
  'X-DNS-Prefetch-Control': {
    desc: 'Controls DNS prefetching, instructing browsers to perform domain name resolution ahead of time.',
    example: 'off'
  },
  'X-Forwarded-For': {
    desc: 'Identifies the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.',
    example: 'client1, proxy1, proxy2'
  },
  'X-Forwarded-Host': {
    desc: 'Identifies the original host requested by the client in the Host HTTP request header.',
    example: 'example.com'
  },
  'X-Forwarded-Proto': {
    desc: 'Identifies the protocol (HTTP or HTTPS) that a client used to connect to your proxy or load balancer.',
    example: 'https'
  },
  'X-Frame-Options': {
    desc: 'Specifies whether a browser should be allowed to render a page in a <frame>, <iframe>, <embed>, or <object>.',
    example: 'deny'
  },
  'X-XSS-Protection': {
    desc: 'Configures the cross-site scripting (XSS) filter built into most modern web browsers.',
    example: '1; mode=block'
  }
};

const HttpHeadersAnalyzer: FunctionComponent = function () {
  const initialValue = `Content-Type: application/json
Content-Length: 1024
Cache-Control: no-cache
Pragma: no-cache
Expires: Thu, 01 Dec 1994 16:00:00 GMT
Last-Modified: Thu, 01 Dec 1994 16:00:00 GMT
Accept: application/json
Accept-Encoding: gzip, deflate
Accept-Language: en-US`;
  const [headers, setHeaders] = useState([
    'Content-Type',
    'Content-Length',
    'Cache-Control',
    'Pragma',
    'Expires',
    'Last-Modified',
    'Accept',
    'Accept-Encoding',
    'Accept-Language'
  ]);

  return (
    <Layout footerBanner='download'>
      <Meta
        title={'Online HTTP headers analyzer'}
        description='Analyze and extract information from HTTP headers of a request or response using this online tool. Useful for debugging and troubleshooting HTTP requests and responses.'
      />
      <Hero
        title='Online <span class="text-primary">HTTP headers</span> analyzer'
        subtitle='Analyze and extract information from HTTP headers of a request or response using this online tool'
      />
      <section className='pb-5 pb-lg-10'>
        <div className='container'>
          <div className='code-editor-container'>
            <TextEditor
              value={initialValue}
              onValueChange={(value) => {
                setHeaders(
                  value
                    .split('\n')
                    .map((header) => {
                      if (!header) {
                        return null;
                      }

                      const [name] = header.split(':');

                      return name.trim();
                    })
                    .filter(Boolean)
                );
              }}
            />
          </div>
          <div className='table-responsive'>
            <table className='table table-striped'>
              <thead>
                <tr>
                  <th>Header name</th>
                  <th>Description</th>
                  <th>Example</th>
                </tr>
              </thead>
              <tbody>
                {headers.map((header, headerIndex) => (
                  <tr key={`header${headerIndex}`}>
                    <td>
                      <a
                        href={`https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/${header}`}
                        target='_blank'
                      >
                        {header}
                      </a>
                    </td>
                    <td>
                      {headersInfo[header]?.desc ?? 'No definition found'}
                    </td>
                    <td>{headersInfo[header]?.example}</td>
                  </tr>
                ))}
              </tbody>
            </table>
            <div>
              Source:{' '}
              <a
                href='https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers'
                target='_blank'
              >
                MDN Web Docs
              </a>
            </div>
          </div>
        </div>
      </section>

      <section className='pb-5 pb-lg-10'>
        <div className='container'>
          <ToolsCta />
        </div>
      </section>

      <section className='pb-5 pb-lg-10'>
        <div className='container'>
          <div className='row'>
            <div className='col-12'>
              <h3 className='mt-6 fw-medium'>About this tool</h3>
              <p>
                This tool allows you to analyze and extract information from
                HTTP headers of a request or response. Simply paste the headers
                in the editor above, separated by a new line, and the tool will
                automatically extract the header names and display their
                descriptions and examples.
              </p>
              <h3 className='mt-6 fw-medium'>HTTP headers</h3>
              <p>
                HTTP headers are the core part of HTTP requests and responses.
                They carry information about the client, server, request, and
                response. They are key-value pairs that are separated by a
                colon. The header name is case-insensitive, while the header
                value is case-sensitive. Headers are used to pass additional
                information between the client and server. They can be divided
                into two categories: request headers and response headers.
              </p>
              <p>
                Request headers are sent by the client to the server, while
                response headers are sent by the server to the client. Some
                headers are common to both requests and responses, while others
                are specific to either requests or responses. Headers can be
                used to control caching, authentication, security, and other
                aspects of the HTTP protocol.
              </p>
            </div>
          </div>
        </div>
      </section>
    </Layout>
  );
};

export default HttpHeadersAnalyzer;
